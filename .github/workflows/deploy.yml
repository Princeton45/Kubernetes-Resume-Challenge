name: Build and Deploy
on:
  push:
    paths:
      - 'learning-app-ecommerce/**'
      - 'learning-app-ecommerce/**/*'


env:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE: prince450/ecom-web
  HELM_CHART_NAME: ecommerce
  HELM_CHART_VERSION: 0.1.0

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Important for git history
        token: ${{ secrets.GITHUB_TOKEN }}  # Required for pushing changes

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Generate incremental version
      id: version
      run: |
        # Read current version from file
        if [ -f version.txt ]; then
          CURRENT_VERSION=$(cat version.txt)
        else
          CURRENT_VERSION=3  # Default start version
          echo $CURRENT_VERSION > version.txt
        fi
        
        # Increment version
        NEW_VERSION=$((CURRENT_VERSION + 1))
        
        # Save new version
        echo $NEW_VERSION > version.txt
        
        # Set version for use in pipeline
        echo "VERSION=v${NEW_VERSION}" >> $GITHUB_OUTPUT
        
        # Configure git
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        
        # Commit and push the updated version file
        git add version.txt
        git commit -m "Bump version to v${NEW_VERSION}"
        git push

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.VERSION }}
          ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest

    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: 'v3.8.0'

    - name: Update Helm chart values
      run: |
        # Update the image tag in values.yaml
        sed -i "s|tag:.*|tag: \"${{ steps.version.outputs.VERSION }}\"|g" ./values.yaml

    - name: Package Helm chart
      run: |
        helm package .
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Upload Helm chart to S3
      run: |
        aws s3 cp ${HELM_CHART_NAME}-${HELM_CHART_VERSION}.tgz s3://helm-bucket557/
        helm repo index .
        aws s3 cp index.yaml s3://helm-bucket557

    - name: Deploy to Kubernetes
      run: |
        aws eks get-token --cluster-name eks-cluster > /dev/null
        helm repo add myapp s3://helm-bucket557
        helm repo update
        helm upgrade --install ${HELM_CHART_NAME} myapp/${HELM_CHART_NAME} \
          --set image.tag=${{ steps.version.outputs.VERSION }} \
          --namespace default
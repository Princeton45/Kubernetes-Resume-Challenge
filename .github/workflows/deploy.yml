name: Build and Deploy
on:
  push:
    paths:
      - 'learning-app-ecommerce/**'
      - 'learning-app-ecommerce/**/*'

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_IMAGE: prince450/ecom-web
  HELM_CHART_NAME: ecommerce
  HELM_CHART_PATH: helm-chart-folder/ecommerce
  S3_BUCKET: helm-bucket557
  NAMESPACE: default  # Use the default namespace for simplicity

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for versioning
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install prerequisite tools
        run: |
          # Install yq for YAML manipulation
          wget https://github.com/mikefarah/yq/releases/download/v4.35.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          
          # Install AWS CLI
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.8.0'

      - name: Install Helm S3 Plugin
        run: |
          helm plugin install https://github.com/hypnoglow/helm-s3.git

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Generate version and update resources
        id: version
        run: |
          # Generate incremental version
          if [ -f version.txt ]; then
            CURRENT_VERSION=$(cat version.txt)
          else
            CURRENT_VERSION=3
          fi
          
          NEW_VERSION=$((CURRENT_VERSION + 1))
          echo $NEW_VERSION > version.txt
          echo "VERSION=v${NEW_VERSION}" >> $GITHUB_OUTPUT
          
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add version.txt
          git commit -m "Bump version to v${NEW_VERSION}"
          git push

          # Update Helm chart values and version
          cd ${{ env.HELM_CHART_PATH }}
          yq e ".image.tag = \"${{ steps.version.outputs.VERSION }}\"" -i values.yaml
          yq e ".version = \"${{ steps.version.outputs.VERSION }}\"" -i Chart.yaml

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./learning-app-ecommerce
          file: ./learning-app-ecommerce/Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ steps.version.outputs.VERSION }}
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest

      - name: Package and upload Helm chart
        working-directory: ${{ env.HELM_CHART_PATH }}
        run: |
          # Package Helm chart
          helm package .

          # Initialize S3 as Helm repo (if needed)
          aws s3 ls s3://${{ env.S3_BUCKET }}/charts/ || helm s3 init s3://${{ env.S3_BUCKET }}/charts

          # Add S3 Helm repo
          helm repo add --force-update ${{ env.S3_BUCKET }} s3://${{ env.S3_BUCKET }}/charts
          helm repo update

          # Push Helm chart to S3
          helm s3 push *.tgz ${{ env.S3_BUCKET }}

      - name: Deploy to Kubernetes
        run: |
          # Configure kubectl for EKS
          aws eks update-kubeconfig --name eks-cluster

          # Deploy the chart using Helm
          helm upgrade --install ${{ env.HELM_CHART_NAME }} ${{ env.S3_BUCKET }}/${{ env.HELM_CHART_NAME }} \
            --set image.tag=${{ steps.version.outputs.VERSION }} \
            --namespace ${{ env.NAMESPACE }}
            